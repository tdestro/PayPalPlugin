{% include '@SyliusUi/_stylesheets.html.twig' with {'path': 'assets/shop/css/style.css'} %}
<!DOCTYPE html>
<html>
    <head>
        <title>{{ 'sylius.pay_pal.pay_with_pay_pal'|trans }}</title>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        {% block stylesheets %}
        {% include '@SyliusUi/_stylesheets.html.twig' with {'path': 'assets/shop/css/style.css'} %}
        {% include '@SyliusUi/_stylesheets.html.twig' with {'path': 'assets/shop/css/custom.css'} %}
            <style>
                .container {
                    padding: 30px;
                    align-items: center;
                    display: grid;
                    justify-content: center;
                    grid-template-rows: 30vh auto;
                    width: 400px;
                    margin: auto;
                    font-family: 'Roboto', verdana, sans-serif;
                }

                #sylius-logo {
                    width: 100%;
                }

                .padding {
                    padding: 10px;
                }

                .back-button-container {
                    position: absolute;
                    padding: 20px;
                    top: 0;
                    left: 0;
                }

                .back-button {
                    cursor: pointer;
                    display: inline-block;
                    min-height: 1em;
                    outline: 0;
                    border: none;
                    vertical-align: baseline;
                    color: rgba(0,0,0,.6);
                    font-family: Lato,'Helvetica Neue',Arial,Helvetica,sans-serif;
                    padding: .78571429em 1.5em .78571429em;
                    text-transform: none;
                    text-shadow: none;
                    font-weight: 700;
                    line-height: 1em;
                    font-style: normal;
                    text-align: center;
                    text-decoration: none;
                    border-radius: .28571429rem;
                    background-color: #1abb9c;
                    color: #fff;
                    margin:auto;
                }

                #paypal-payment-container {
                    min-height: 100%;
                    height: auto;
                    width: 100%;
                }

                .input {
                    height: 30px;
                    padding: 5px;
                    margin-bottom: 10px;
                }

                .low-opacity {
                    opacity: 0.9;
                }

                .hidden {
                    display: none;
                }

                input, .input {
                    font-size: 14px;
                    font-family: 'Product Sans', sans-serif;
                    color: #3a3a3a;
                    cursor: auto;
                    width: 100%;
                    padding: 5px;
                    height: 30px;
                    margin-bottom: 5px;
                    margin-top: 2px;
                    border: 1px solid lightgray;
                    -webkit-transition: border-color 160ms;
                    transition: border-color 160ms;
                    border-radius: 5px;
                }

                input:focus, .input:focus {
                    outline: none;
                    border-color: #777;
                }

                .braintree-hosted-fields-focused {
                    border-color: #777;
                }

                .braintree-hosted-fields-invalid {
                    border-color: tomato;
                }

                .braintree-hosted-fields-valid {
                    border-color: limegreen;
                }

                .checkbox-grid {
                    display: grid;
                    grid-template-columns: 20px auto;
                    align-items: center;
                    grid-gap: 10px;
                    grid-template-rows: 30px;
                    margin-bottom: 5px;
                }

                #card-image {
                    position: absolute;
                    top: 3.1em;
                    right: 1.7em;
                    width: 44px;
                    height: 28px;
                    background-image: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/346994/card_sprite.png);
                    background-size: 86px 458px;
                    border-radius: 1px;
                    background-position: -100px 0;
                    background-repeat: no-repeat;
                    margin-bottom: 1em;
                }

                #card-image.visa {
                     background-position: 0 -398px;
                }

                #card-image.master-card {
                     background-position: 0 -281px;
                }

                #card-image.american-express {
                     background-position: 0 -370px;
                }

                #card-image.discover {
                     background-position: 0 -163px;
                }

                #card-image.maestro {
                     background-position: 0 -251px;
                }

                #card-image.jcb {
                     background-position: 0 -221px;
                }

                #card-image.diners-club {
                     background-position: 0 -133px;
                }

                #billing-info {
                    height: 20px;
                    margin: 0;
                }

                label {
                    padding: 2px;
                    margin-bottom: 2px;
                }

                #paypal-button-container {
                    display: grid;
                    grid-gap: 10px;
                }
            </style>
        {% endblock %}
        {% include '@Destro/_favicons.html.twig' %}
    </head>
    <body>
    <div id="paypal-payment-container" class="ui segment loadable">
        <div class="back-button-container">
            <a href="{{ path('sylius_shop_order_show', {'tokenValue': order_token}) }}" class="back-button">
                {{ 'sylius.pay_pal.back_to_store'|trans }}
            </a>
        </div>
        <div class="container">
            {% include '@SyliusShop/_flashes.html.twig' %}
            <div class="header padding"><svg class="ui tiny image" viewBox="0 0 240.18 421.63" xmlns="http://www.w3.org/2000/svg"><text style="font-size:62.13;stroke:#003b9f;stroke-miterlimit:10;fill:#003b9f;font-family:Futura-Medium, Futura;font-weight:500" transform="translate(.5 358.65)">DE<tspan letter-spacing=".01em" x="80.24" y="0">S</tspan><tspan letter-spacing="0em" x="117.34" y="0">T</tspan><tspan letter-spacing="-.02em" x="147.32" y="0">R</tspan><tspan x="183.66" y="0">O</tspan></text><text font-family="Futura-Medium, Futura" font-size="44.14" font-weight="500" transform="translate(.7 408.9)">M<tspan letter-spacing="-.04em" x="42.44" y="0">A</tspan><tspan letter-spacing=".02em" x="73.58" y="0">C</tspan><tspan letter-spacing="0em" x="105.44" y="0">HINES</tspan></text><path d="m200.12 246.53 36.78 37.99v-284.52l-36.78 89.45z" fill="#00ffa1"></path><path d="m3.36 284.23-.03-207.99 39.53 36.64v82.71l43.13-42.73 25.82 23.98z" fill="#00ffa1"></path><path d="m3.33 0 117.95 114.75 115.62-114.75v284.52l-2.81-2.9v-86.25l-2.31.01v83.87l-3.61-3.75v-68.12h-2.34l.09 65.81-3.72-3.84.02-69.47h-2.34v67.06l-3.62-3.75.01-50.31h-2.34v47.93l-3.64-3.81.03-70.12h-2.34v67.78l-3.6-3.72-.01-49.31h-2.34v46.87l-1.91-1.97v-157.08l-79.01 78.18-117.83-109.92z" fill="#003b9f"></path><g fill="#333"><path d="m3.33 284.26v-208.05l39.53 36.67.01 82.65 5.08-4.99v49.5l-3.57 3.56-.01-42.22h-2.34v44.59l-3.9 3.84-.01-54.68h-2.34l.04 56.97-3.65 3.62v-48.59h-2.34l.06 50.81-3.66 3.66-.01-61.97h-2.34l.07 64.25-3.66 3.59-.02-54.59h-2.34l.08 56.84-3.69 3.63v-86.72h-2.34l.09 88.93-3.69 3.69-.01-77.87h-2.34l.07 80.12z"></path><path d="m50.32 188.17 35.67-35.33 25.83 24-24.5 24.29v-14.59h-2.34v16.92l-3.62 3.54.01-5.62h-2.34v7.91l-4.89 4.9-.02-19.06h-2.34v21.37l-3.56 3.56-.05-12.93h-2.34v15.29l-3.63 3.63.02-26.42h-2.34v28.71l-3.64 3.5.03-18.96h-2.34v21.33l-3.61 3.54z"></path></g></svg></div>
            <div id="tabs" class="ui top attached tabular menu">
                <div class="item" data-tab="paypal">PayPal</div>
                <div class="active item" data-tab="card">{{ 'sylius.pay_pal.credit_card'|trans }}</div>
            </div>
            <div class="ui bottom attached active tab segment" data-tab="paypal">
                <div class="button-container padding">
                    <div id="paypal-button-container"></div>
                </div>
            </div>
            <div class="ui bottom attached tab segment" data-tab="card">
                <div class="button-container padding">
                    <div id="advanced-cards-container"></div>
                    <form id="advanced-cards-form">
                        <label for="card-number">{{ 'sylius.pay_pal.credit_card_number'|trans }}</label>
                        <div id="card-number" class="input"><div id="card-image"></div></div>
                        <label for="expiration-date">{{ 'sylius.pay_pal.expiration_date'|trans }}</label>
                        <div id="expiration-date" class="input"></div>
                        <label for="cvv">{{ 'sylius.pay_pal.cvv'|trans }}</label>
                        <div id="cvv" class="input"></div>
                        <label for='card-holder-name'>{{ 'sylius.form.credit_card.cardholder_name'|trans }}</label>
                        <br/><input type='text' id='card-holder-name' name='card-holder-name' autocomplete='off' placeholder='{{ 'sylius.form.credit_card.cardholder_name'|trans }}' value="{{ billing_address.fullName }}"/>
                        <div class="checkbox-grid">
                            <input type="checkbox" id="billing-info" checked />
                            <label for="billing-info">{{ 'sylius.pay_pal.billing_info'|trans }}</label>
                        </div>
                        <div id="billing-container" class="hidden">
                            <br/><label for='card-billing-address-street'>{{ 'sylius.ui.billing_address'|trans }}</label>
                            <br/><input type='text' id='card-billing-address-street' name='card-billing-address-street' autocomplete='off' placeholder='{{ 'sylius.ui.street'|trans }}' value="{{ billing_address.street }}"/>
                            <input type='text' id='card-billing-address-city' name='card-billing-address-city' autocomplete='off' placeholder='{{ 'sylius.ui.city'|trans }}' value="{{ billing_address.city }}"/>
                            <input type='text' id='card-billing-address-state' name='card-billing-address-state' autocomplete='off' placeholder='{{ 'sylius.ui.state'|trans }}' value="{{ billing_address|sylius_province_name }}"/>
                            <input type='text' id='card-billing-address-zip' name='card-billing-address-zip' autocomplete='off' placeholder='{{ 'sylius.ui.postcode'|trans }}' value="{{ billing_address.postcode }}"/>
                            <input type='text' id='card-billing-address-country' name='card-billing-address-country' autocomplete='off' placeholder='{{ 'sylius.ui.country'|trans }}' value="{{ billing_address.countryCode }}" />
                        </div>
                        <button value="submit" id="submit" class="ui button yellow fluid">{{ 'sylius.pay_pal.pay_with_card'|trans }}</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    </body>
    {% include '@SyliusUi/_javascripts.html.twig' with {'path': 'assets/shop/js/app.js'} %}
    <script src="https://www.paypal.com/sdk/js?components=hosted-fields,buttons,funding-eligibility&locale={{ locale }}&currency={{ currency }}&vault=false&client-id={{ client_id }}&merchant-id={{ merchant_id }}&intent=capture" data-partner-attribution-id="{{ partner_attribution_id }}" data-enable-3ds data-client-token="{{ client_token }}"></script>
    <script>
        let createPayPalOrderUrl = "{{ path('sylius_paypal_plugin_create_paypal_order', {'token': order_token}) }}";
        let completePayPalOrderUrl = "{{ path('sylius_paypal_plugin_complete_paypal_order', {'token': order_token }) }}"
        let errorPayPalPaymentUrl = "{{ path('sylius_paypal_plugin_payment_error') }}";
        let availableCountries = {{ available_countries|json_encode|raw }};
        let cancelPayPalPaymentUrl = "{{ path('sylius_paypal_plugin_cancel_checkout_payment') }}";
        let updatePayPalOrderUrl = "{{ path('sylius_paypal_plugin_update_paypal_order') }}";
        let validForm = false;
        let invalidFormMessage = "{{ 'sylius.pay_pal.invalid_form'|trans }}";

        paypal.Buttons({
            locale: '{{ locale }}',
            style: { label: 'pay' },
            createOrder: function(data, actions) {
                return fetch(createPayPalOrderUrl, {
                    method: 'post'
                }).then(res => {
                    document.querySelector('#paypal-payment-container').classList.add('loading');
                    document.querySelector('#paypal-button-container').classList.add('low-opacity');
                    return res.json();
                }).then(data => data.orderID);
            },
            onApprove: function(data, actions) {
                return fetch(completePayPalOrderUrl, {
                    method: 'post'
                }).then(res => res.json()).then(details => window.location.href = details.return_url);
            },
            onError: function (error) {
                return fetch(errorPayPalPaymentUrl, {
                    method: 'post',
                    headers: {},
                    body: error
                }).then(window.location.reload());
            },
            onShippingChange: function(data, actions) {
                if (!availableCountries.filter(country => country === data.shipping_address.country_code).length) {
                    return actions.reject();
                }

                return fetch(updatePayPalOrderUrl, {
                    method: 'post',
                    headers: { 'content-type': 'application/json' },
                    body: JSON.stringify(data)
                }).then(res => {
                    if (!res || res.error) {
                        return actions.reject();
                    }

                    return actions.resolve();
                });
            },
            onCancel: function (data, actions) {
                return fetch(cancelPayPalPaymentUrl, {
                    method: 'post',
                    headers: { 'content-type': 'application/json' },
                    body: JSON.stringify({ payPalOrderId: data.orderID })
                }).then(window.location.reload());
            }
        }).render('#paypal-button-container');

        //once we add onshippingchange button doesnt render anymore
        paypal.getFundingSources().forEach(function(fundingSource) {
            var button = paypal.Buttons({
                fundingSource: fundingSource,
                createOrder: function(data, actions) {
                    return fetch(createPayPalOrderUrl, {
                        method: 'post'
                    }).then(res => {
                        document.querySelector('#paypal-payment-container').classList.add('loading');
                        document.querySelector('#paypal-button-container').classList.add('low-opacity');
                        return res.json();
                    }).then(data => data.orderID);
                },
                onApprove: function(data, actions) {
                    return fetch(completePayPalOrderUrl, {
                        method: 'post'
                    }).then(res => res.json()).then(details => window.location.href = details.return_url);
                },
                onError: function (err) {
                    return fetch(errorPayPalPaymentUrl, {
                        method: 'post',
                        headers: { 'content-type': 'application/json' },
                        body: JSON.stringify(err)
                    }).then(window.location.reload());
                },
                onCancel: function (data, actions) {
                    return fetch(cancelPayPalPaymentUrl, {
                        method: 'post',
                        headers: { 'content-type': 'application/json' },
                        body: JSON.stringify({ payPalOrderId: data.orderID })
                    }).then(window.location.reload());
                }
            });

            if (button.isEligible() && fundingSource != 'paypal' && fundingSource != 'card') {
                button.render('#paypal-button-container');
            }
        });

        if (paypal.HostedFields.isEligible() === true) {
            paypal.HostedFields.render({
                createOrder: function(data, actions) {
                    document.querySelector('#paypal-payment-container').classList.add('loading');
                    document.querySelector('#paypal-button-container').classList.add('low-opacity');

                    return fetch(createPayPalOrderUrl, {
                        method: 'POST'
                    }).then(function(res) {
                        return res.json();
                    }).then(function(data) {
                        return data.orderID;
                    });
                },
                styles: {
                    'input': {
                        'font-size': '14px',
                        'font-family': 'Product Sans',
                        'color': '#3a3a3a',
                    },
                    ':focus': {
                        'color': '#000'
                    }
                },
                fields: {
                    number: {
                        selector: '#card-number',
                        placeholder: '{{ 'sylius.pay_pal.credit_card_number'|trans }}',
                        required: 'required',
                    },
                    cvv: {
                        selector: '#cvv',
                        placeholder: '123',
                        required: 'required',
                    },
                    expirationDate: {
                        selector: '#expiration-date',
                        placeholder: 'MM/YYYY',
                        required: 'required',
                    }
                }
            }).then(hostedFields => {
                hostedFields.on('validityChange', function (event) {
                    let field = event.fields[event.emittedBy];

                    if (field.isValid) {
                        field.container.classList.remove('invalid-field');
                    } else if (field.isPotentiallyValid) {
                        field.container.classList.add('invalid-field');
                    } else {
                        field.container.classList.add('invalid-field');
                    }
                });

                hostedFields.on('cardTypeChange', function (event) {
                    if (event.cards.length === 1) {
                        document.querySelector('#advanced-cards-form').classList = [];
                        document.querySelector('#advanced-cards-form').classList.add(event.cards[0].type);
                        document.querySelector('#card-image').classList = [];
                        document.querySelector('#card-image').classList.add(event.cards[0].type);
                        // Change the CVV length for AmericanExpress cards
                        if (event.cards[0].code.size === 4) {
                            hostedFieldsInstance.setAttribute({
                                field: 'cvv',
                                attribute: 'placeholder',
                                value: '1234'
                            });
                        }
                    } else {
                        hostedFields.setAttribute({
                            field: 'cvv',
                            attribute: 'placeholder',
                            value: '123'
                        });
                        document.querySelector('#card-image').classList = [];
                        document.querySelector('#advanced-cards-form').classList = [];
                    }
                });

                document.querySelector('#advanced-cards-form').addEventListener('submit', event => {
                    event.preventDefault();

                    let state = hostedFields.getState();
                    let formValid = Object.keys(state.fields).every(function (key) {
                        if (!state.fields[key].isValid) state.fields[key].container.classList.add('invalid-field');
                        else state.fields[key].container.classList.remove('invalid-field')
                        return state.fields[key].isValid;
                    });

                    if (formValid) {
                        hostedFields.submit({
                            cardholderName: document.getElementById('card-holder-name').value,
                            billingAddress: {
                                streetAddress: document.getElementById('card-billing-address-street').value,
                                region: document.getElementById('card-billing-address-state').value,
                                locality: document.getElementById('card-billing-address-city').value,
                                postalCode: document.getElementById('card-billing-address-zip').value,
                                countryCodeAlpha2: document.getElementById('card-billing-address-country').value
                            }
                        }).then(payload => {
                            return fetch(completePayPalOrderUrl, {
                                method: 'post'
                            }).then(function(res) {
                                return res.json();
                            }).then(function(data) {
                                if (data.status == 'processing') {
                                    return fetch(cancelPayPalPaymentUrl, {
                                        method: 'post',
                                        headers: { 'content-type': 'application/json' },
                                        body: JSON.stringify({ payPalOrderId: data.orderID })
                                    }).then(window.location.reload());
                                }

                                window.location.href = data.return_url;
                            });
                        });
                    } else {
                        alert(invalidFormMessage);
                    }
                });
            });
        }

        document.querySelector('#billing-info').addEventListener('change', e => {
            document.querySelector('#billing-container').classList.toggle('hidden');
        })

        $(document).ready(function() {
            $('#tabs').tab()
        });
    </script>
</html>
